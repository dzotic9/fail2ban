version: 0.9.6
jpsType: update
jpsVersion: 0.8
name: Fail2Ban

baseUrl: https://github.com/dzotic9/fail2ban/raw/master/
categories:
- apps/others
- apps/management-and-monitoring
description: Fail2Ban scans log files like and bans IP addresses that make too many password failures. It updates firewall rules to reject the IP address. These rules can be defined by the user. Fail2Ban can read multiple log files such as sshd or Apache Web server ones.
homepage: http://www.fail2ban.org/
logo: /images/Fail2Ban.png

targetNodes:
  nodeType:
  - tomcat6
  - tomcat7
  - tomcat8
  - tomcat85
  - tomcat9
  - tomcat
  - tomee
  - tomee-dockerized
  - glassfish3
  - glassfish4
  - glassfish
  - jetty6
  - apache
  - apache2
  - nginxphp
  - apache2-ruby
  - nginx-ruby
  - nginx
  - nginx-dockerized
  - nginxphp-dockerized
  - haproxy
  - apache-lb
  - varnish
  - varnish-dockerized
  - apache-python
  - apache-ruby
  - jenkins
  - jenkins2
  - jetty
  - lemp
  - litespeedadc
  - litespeedphp
  - llsmp
  - nginxruby
  - nodejs
  - payara
  - wildfly
  
globals:
  installScript: ${baseUrl}/scripts/install.sh
  setupScript: ${baseUrl}/scripts/setup.sh
  removeScript: ${baseUrl}/scripts/remove.sh
  documentationLink: http://www.fail2ban.org/wiki/index.php/Manual
menu:
- caption: Remove the IP from the Ban list
  confirmText: You are going to remove the IP from the Ban list. Continue?
  loadingText: Performing the IP removing..
  procedure: removeIP
  settings: removeSettings
  successText: The IP was removed.
  
onInstall:
- installFail2ban
- setupFail2ban

onUninstall: removeFail2Ban

actions:
  removeIP:
  - cmd [${targetNodes.nodeGroup}]:
    - for jail in $(fail2ban-client status | awk -F 'Jail list:' '{ print $2}' | grep -oE '[a-z0-9\-]*'); do fail2ban-client set $jail unbanip ${this.bannedip} 2>&1 | echo '${this.bannedip} was unbanned at '$jail; done
    user: root
  installFail2ban:
  - cmd [${targetNodes.nodeGroup}]:
    - curl -sSfL "${globals.installScript}" -o ${SERVER_SCRIPTS}/install.sh 2>&1
    - "/bin/bash ${SERVER_SCRIPTS}/install.sh"
    user: root
  setupFail2ban:
  - cmd [${targetNodes.nodeGroup}]:
    - curl -sSfL "${globals.setupScript}" -o ${SERVER_SCRIPTS}/setup.sh 2>&1
    - /bin/bash ${SERVER_SCRIPTS}/setup.sh "${user.email}"
    user: root
  removeFail2Ban:
    cmd [${targetNodes.nodeGroup}]:
    - curl -sSfL "${globals.removeScript}" -o ${SERVER_SCRIPTS}/remove.sh 2>&1
    - "/bin/bash ${SERVER_SCRIPTS}/remove.sh"
    user: root
    
settings:
  removeSettings:
    fields:
    - caption: Banned IP
      name: bannedip
      required: true
      type: string
      regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
      regexText: Not valid IP address.
      
success: Addon was successufully installed with default Jelastic configuration. If you desire to set custom behaviour for your environment - please please refer to [ducumentation](${globals.documentationLink})
